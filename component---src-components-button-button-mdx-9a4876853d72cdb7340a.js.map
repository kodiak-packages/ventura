{"version":3,"sources":["webpack:///../src/components/Button/Button.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Button","Activity","Trash2","type","size","onClick","event","console","log","target","isDisabled","isLoading","suffixIcon","prefixIcon","of","isMDXComponent"],"mappings":"ggBAQO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,kBAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,uNACA,iBAAQ,CACN,GAAM,kBADR,kBAGA,sBACE,kBAAIC,WAAW,MAAf,oEACA,kBAAIA,WAAW,MAAf,wDACA,kBAAIA,WAAW,MAAf,0DAEF,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4BAA6BC,SAAO,GACrEL,QACAH,kBACAS,eACAC,UACAC,WACAC,aACAC,YAPqE,gBAQrEb,IARqE,EASrEH,eATqE,GAUpEO,QAAQ,cACb,YAAC,IAAD,CAAQA,QAAQ,UAAhB,aAEE,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,+FAAoGC,SAAO,GAC5IL,QACAH,kBACAS,eACAC,UACAC,WACAC,aACAC,YAP4I,gBAQ5Ib,IAR4I,EAS5IH,eAT4I,GAU3IO,QAAQ,cACb,YAAC,IAAD,CAAQU,KAAK,UAAUV,QAAQ,UAA/B,YACA,uBACA,YAAC,IAAD,CAAQU,KAAK,YAAYV,QAAQ,UAAjC,aAEE,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,0IAAiJC,SAAO,GACzLL,QACAH,kBACAS,eACAC,UACAC,WACAC,aACAC,YAPyL,gBAQzLb,IARyL,EASzLH,eATyL,GAUxLO,QAAQ,cACb,YAAC,IAAD,CAAQW,KAAK,SAASX,QAAQ,UAA9B,YACA,uBACA,YAAC,IAAD,CAAQW,KAAK,QAAQX,QAAQ,UAA7B,YACC,uBACD,YAAC,IAAD,CAAQW,KAAK,QAAQX,QAAQ,UAA7B,aAEE,iBAAQ,CACN,GAAM,mCADR,mCAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,4FAA6FC,SAAO,GACrIL,QACAH,kBACAS,eACAC,UACAC,WACAC,aACAC,YAPqI,gBAQrIb,IARqI,EASrIH,eATqI,GAUpIO,QAAQ,cACb,YAAC,IAAD,CAAQY,QAAS,SAAAC,GAAK,OAAIC,QAAQC,IAAR,WAAuBF,EAAMG,SAAWhB,QAAQ,UAA1E,aAEE,iBAAQ,CACN,GAAM,2BADR,2BAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,qCAAsCC,SAAO,GAC9EL,QACAH,kBACAS,eACAC,UACAC,WACAC,aACAC,YAP8E,gBAQ9Eb,IAR8E,EAS9EH,eAT8E,GAU7EO,QAAQ,cACb,YAAC,IAAD,CAAQiB,YAAU,EAACjB,QAAQ,UAA3B,WAEE,iBAAQ,CACN,GAAM,6BADR,6BAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,oCAAqCC,SAAO,GAC7EL,QACAH,kBACAS,eACAC,UACAC,WACAC,aACAC,YAP6E,gBAQ7Eb,IAR6E,EAS7EH,eAT6E,GAU5EO,QAAQ,cACb,YAAC,IAAD,CAAQkB,WAAS,EAAClB,QAAQ,UAA1B,WAEE,iBAAQ,CACN,GAAM,wBADR,wBAGA,yEACA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,+GAAgHC,SAAO,GACxJL,QACAH,kBACAS,eACAC,UACAC,WACAC,aACAC,YAPwJ,gBAQxJb,IARwJ,EASxJH,eATwJ,GAUvJO,QAAQ,cACb,YAAC,IAAD,CAAQmB,WAAY,YAAC,IAAD,CAAUnB,QAAQ,aAAeA,QAAQ,UAA7D,YACA,uBACA,YAAC,IAAD,CAAQoB,WAAY,YAAC,IAAD,CAAQpB,QAAQ,WAAaA,QAAQ,UAAzD,WAEE,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,IAAD,CAAOqB,GAAId,IAAQP,QAAQ,gB,gNAK/BH,EAAWyB,gBAAiB","file":"component---src-components-button-button-mdx-9a4876853d72cdb7340a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ventura/ventura/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Button, Activity, Trash2 } from '../../index.ts';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Buttons make common actions more obvious and help users more easily perform them. Buttons use labels and sometimes icons to communicate the action that will occur when the user touches them.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\"\n    }}>{`Best practices`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Group buttons logically into sets based on usage and importance.`}</li>\n      <li parentName=\"ul\">{`Ensure that button actions are clear and consistent.`}</li>\n      <li parentName=\"ul\">{`Select a single button variation and do not mix them.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <Playground __position={0} __code={'<Button>Click me</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Activity,\n      Trash2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button mdxType=\"Button\">Click me</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"button-types\"\n    }}>{`Button types`}</h3>\n    <Playground __position={1} __code={'<Button type=\\\"primary\\\">Click me</Button>\\n<br />\\n<Button type=\\\"secondary\\\">Click me</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Activity,\n      Trash2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button type=\"primary\" mdxType=\"Button\">Click me</Button>\n  <br />\n  <Button type=\"secondary\" mdxType=\"Button\">Click me</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"button-sizes\"\n    }}>{`Button sizes`}</h3>\n    <Playground __position={2} __code={'<Button size=\\\"normal\\\">Click me</Button>\\n<br />\\n<Button size=\\\"small\\\">Click me</Button>\\n<br />\\n<Button size=\\\"large\\\">Click me</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Activity,\n      Trash2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button size=\"normal\" mdxType=\"Button\">Click me</Button>\n  <br />\n  <Button size=\"small\" mdxType=\"Button\">Click me</Button>\n   <br />\n  <Button size=\"large\" mdxType=\"Button\">Click me</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"button-with-an-onclick-function\"\n    }}>{`Button with an onClick function`}</h3>\n    <Playground __position={3} __code={'<Button onClick={event => console.log(`LOGGER: ${event.target}`)}>\\n  Click me\\n</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Activity,\n      Trash2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button onClick={event => console.log(`LOGGER: ${event.target}`)} mdxType=\"Button\">Click me</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"button-that-is-disabled\"\n    }}>{`Button that is disabled`}</h3>\n    <Playground __position={4} __code={'<Button isDisabled>Submit</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Activity,\n      Trash2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button isDisabled mdxType=\"Button\">Submit</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"button-with-loading-state\"\n    }}>{`Button with loading state`}</h3>\n    <Playground __position={5} __code={'<Button isLoading>Submit</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Activity,\n      Trash2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button isLoading mdxType=\"Button\">Submit</Button>\n    </Playground>\n    <h3 {...{\n      \"id\": \"buttons-with-an-icon\"\n    }}>{`Buttons with an icon`}</h3>\n    <p>{`Button can be prefixed or suffixed with an Icon.`}</p>\n    <Playground __position={6} __code={'<Button suffixIcon={<Activity />}>Insights</Button>\\n<br />\\n<Button prefixIcon={<Trash2 />}>Remove</Button>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Activity,\n      Trash2,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button suffixIcon={<Activity mdxType=\"Activity\" />} mdxType=\"Button\">Insights</Button>\n  <br />\n  <Button prefixIcon={<Trash2 mdxType=\"Trash2\" />} mdxType=\"Button\">Remove</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}