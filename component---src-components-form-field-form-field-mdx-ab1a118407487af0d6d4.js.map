{"version":3,"sources":["webpack:///../src/components/FormField/FormField.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","FormField","Input","styles","label","errorMessage","value","isInvalid","hint","placeholder","React","hexColor","setHexColor","setLabel","style","backgroundColor","className","flexRow","onChange","event","target","of","isMDXComponent"],"mappings":"iiBASO,IAAMA,EAAe,Q,wNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,8NACA,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4DAA+DC,SAAO,GACvGJ,QACAH,kBACAQ,eACAC,UACAC,cACAC,UACAC,YAPuG,gBAQvGZ,IARuG,EASvGH,eATuG,GAUtGO,QAAQ,cACb,YAAC,IAAD,CAAWS,MAAM,aAAaT,QAAQ,aACpC,YAAC,IAAD,CAAOA,QAAQ,YAGf,iBAAQ,CACN,GAAM,gCADR,gCAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iKAAwKC,SAAO,GAChNJ,QACAH,kBACAQ,eACAC,UACAC,cACAC,UACAC,YAPgN,gBAQhNZ,IARgN,EAShNH,eATgN,GAU/MO,QAAQ,cACb,YAAC,IAAD,CAAWS,MAAM,YAAYC,aAAa,0DAA0DV,QAAQ,aAC1G,YAAC,IAAD,CAAOW,MAAM,OAAOC,WAAS,EAACZ,QAAQ,YAGtC,iBAAQ,CACN,GAAM,uBADR,uBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sKAA6KC,SAAO,GACrNJ,QACAH,kBACAQ,eACAC,UACAC,cACAC,UACAC,YAPqN,gBAQrNZ,IARqN,EASrNH,eATqN,GAUpNO,QAAQ,cACb,YAAC,IAAD,CAAWS,MAAM,cAAcI,KAAK,4DAA4Db,QAAQ,aACtG,YAAC,IAAD,CAAOc,YAAY,oBAAoBd,QAAQ,YAG/C,iBAAQ,CACN,GAAM,0BADR,0BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,goBAAqoBC,SAAO,GAC7qBJ,QACAH,kBACAQ,eACAC,UACAC,cACAC,UACAC,YAP6qB,gBAQ7qBZ,IAR6qB,EAS7qBH,eAT6qB,GAU5qBO,QAAQ,eACZ,WAAM,MAC+Be,WAAe,WAAxCC,EADN,KACgBC,EADhB,OAEyBF,WAAe,UAAlCN,EAFN,KAEaS,EAFb,KAGD,OAAO,YAAC,IAAD,CAAWT,MAAM,eAAeI,KAAM,oBAAMM,MAAO,CACxDC,gBAAiBJ,GAChBK,UAAWb,IAAOC,OAClBA,GACQT,QAAQ,aACrB,mBAAKqB,UAAWb,IAAOc,SACrB,YAAC,IAAD,CAAOX,MAAOK,EAAUO,SAAU,SAAAC,GAAK,OAAIP,EAAYO,EAAMC,OAAOd,QAAQX,QAAQ,UACpF,YAAC,IAAD,CAAOW,MAAOF,EAAOc,SAAU,SAAAC,GAAK,OAAIN,EAASM,EAAMC,OAAOd,QAAQX,QAAQ,eAKlF,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,IAAD,CAAO0B,GAAIpB,IAAWN,QAAQ,gB,sNAKlCH,EAAW8B,gBAAiB","file":"component---src-components-form-field-form-field-mdx-ab1a118407487af0d6d4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ventura/ventura/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { FormField, Input } from '../../index.ts';\nimport styles from './docAssets/docs.module.css';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"formfield\"\n    }}>{`FormField`}</h1>\n    <p>{`This component is used to wrap around one or multiple form elements. The label describes the set of form elements. An error message can be set if the user did not interact correctly these elements.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <Playground __position={0} __code={'<FormField label=\\\"First name\\\">\\n  <Input />\\n</FormField>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormField,\n      Input,\n      styles,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FormField label='First name' mdxType=\"FormField\">\n    <Input mdxType=\"Input\" />\n  </FormField>\n    </Playground>\n    <h3 {...{\n      \"id\": \"formfield-with-error-message\"\n    }}>{`FormField with error message`}</h3>\n    <Playground __position={1} __code={'<FormField\\n  label=\\\"Last name\\\"\\n  errorMessage=\\\"This field contains the following illegal characters: ;\\\"\\n>\\n  <Input value=\\\"Doe;\\\" isInvalid />\\n</FormField>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormField,\n      Input,\n      styles,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FormField label='Last name' errorMessage='This field contains the following illegal characters: ;' mdxType=\"FormField\">\n    <Input value='Doe;' isInvalid mdxType=\"Input\" />\n  </FormField>\n    </Playground>\n    <h3 {...{\n      \"id\": \"formfield-with-hint\"\n    }}>{`FormField with hint`}</h3>\n    <Playground __position={2} __code={'<FormField\\n  label=\\\"MAC address\\\"\\n  hint=\\\"The mac address is located at the back side of the device\\\"\\n>\\n  <Input placeholder=\\\"00:00:00:00:00:00\\\" />\\n</FormField>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormField,\n      Input,\n      styles,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <FormField label='MAC address' hint='The mac address is located at the back side of the device' mdxType=\"FormField\">\n    <Input placeholder='00:00:00:00:00:00' mdxType=\"Input\" />\n  </FormField>\n    </Playground>\n    <h3 {...{\n      \"id\": \"formfield-with-preview\"\n    }}>{`FormField with preview`}</h3>\n    <Playground __position={3} __code={'() => {\\n  const [hexColor, setHexColor] = React.useState(\\'#03176b\\')\\n  const [label, setLabel] = React.useState(\\'Devops\\')\\n  return (\\n    <FormField\\n      label=\\\"Custom label\\\"\\n      hint={\\n        <span style={{ backgroundColor: hexColor }} className={styles.label}>\\n          {label}\\n        </span>\\n      }\\n    >\\n      <div className={styles.flexRow}>\\n        <Input\\n          value={hexColor}\\n          onChange={event => setHexColor(event.target.value)}\\n        />\\n        <Input\\n          value={label}\\n          onChange={event => setLabel(event.target.value)}\\n        />\\n      </div>\\n    </FormField>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormField,\n      Input,\n      styles,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [hexColor, setHexColor] = React.useState('#03176b');\n        const [label, setLabel] = React.useState('Devops');\n        return <FormField label='Custom label' hint={<span style={{\n          backgroundColor: hexColor\n        }} className={styles.label}>\n          {label}\n          </span>} mdxType=\"FormField\">\n      <div className={styles.flexRow}>\n        <Input value={hexColor} onChange={event => setHexColor(event.target.value)} mdxType=\"Input\" />\n        <Input value={label} onChange={event => setLabel(event.target.value)} mdxType=\"Input\" />\n      </div>\n      </FormField>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={FormField} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}