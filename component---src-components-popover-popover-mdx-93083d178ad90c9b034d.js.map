{"version":3,"sources":["webpack:///../src/components/Popover/Popover.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Popover","Menu","Button","Trash","React","isVisible","setIsVisible","popoverContent","Item","prefixIcon","onClose","content","onClick","closePopover","placement","onMouseEnter","onMouseLeave","of","isMDXComponent"],"mappings":"6gBAQO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,oGACA,iBAAQ,CACN,GAAM,kBADR,kBAGA,sBACE,kBAAIC,WAAW,MAAf,6GAEF,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qfAAsfC,SAAO,GAC9hBL,QACAH,kBACAS,eACAC,UACAC,YACAC,SACAC,WACAC,WAR8hB,gBAS9hBd,IAT8hB,EAU9hBH,eAV8hB,GAW7hBO,QAAQ,eACZ,WAAM,MACiCW,YAAe,GAA1CC,EADN,KACiBC,EADjB,KAEKC,EAAiB,YAAC,IAAD,CAAMd,QAAQ,QACrC,YAAC,IAAKe,KAAN,iBACA,YAAC,IAAKA,KAAN,CAAWC,WAAY,YAAC,IAAD,CAAOhB,QAAQ,WAAtC,aAOA,OAAO,YAAC,IAAD,CAASY,UAAWA,EAAWK,QAJtB,WACdJ,GAAa,IAGyCK,QAASJ,EAAgBd,QAAQ,WACzF,YAAC,IAAD,CAAQmB,QAAS,kBAAMN,GAAcD,IAAYZ,QAAQ,UAAzD,wBAIJ,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,4eAA+eC,SAAO,GACvhBL,QACAH,kBACAS,eACAC,UACAC,YACAC,SACAC,WACAC,WARuhB,gBASvhBd,IATuhB,EAUvhBH,eAVuhB,GAWthBO,QAAQ,eACZ,WAAM,MACiCW,YAAe,GAA1CC,EADN,KACiBC,EADjB,KAEKC,EAAiB,4CAIjBM,EAAe,WACnBP,GAAa,IAOf,OAAO,YAAC,IAAD,CAASQ,UAAW,MAAOT,UAAWA,EAAWK,QAASG,EAAcF,QAASJ,EAAgBd,QAAQ,WAChH,YAAC,IAAD,CAAOsB,aALa,WAClBT,GAAa,IAImBU,aAAcH,EAAcpB,QAAQ,cAI1E,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,IAAD,CAAOwB,GAAIjB,IAASP,QAAQ,gB,kNAKhCH,EAAW4B,gBAAiB","file":"component---src-components-popover-popover-mdx-93083d178ad90c9b034d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ventura/ventura/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Popover, Menu, Button, Trash } from '../../index.ts';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`A Popover is used to display extra information or actions in a compact way.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\"\n    }}>{`Best practices`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Make sure the correct popover events are covered, depending on the event. (Click, hover, focus, etc...).`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [isVisible, setIsVisible] = React.useState(false)\\n  const popoverContent = (\\n    <Menu>\\n      <Menu.Item>Option 1</Menu.Item>\\n      <Menu.Item prefixIcon={<Trash />}>Option 2</Menu.Item>\\n    </Menu>\\n  )\\n  const onClose = () => {\\n    setIsVisible(false)\\n  }\\n  return (\\n    <Popover isVisible={isVisible} onClose={onClose} content={popoverContent}>\\n      <Button onClick={() => setIsVisible(!isVisible)}>\\n        Open basic modal\\n      </Button>\\n    </Popover>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Popover,\n      Menu,\n      Button,\n      Trash,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isVisible, setIsVisible] = React.useState(false);\n        const popoverContent = <Menu mdxType=\"Menu\">\n        <Menu.Item>Option 1</Menu.Item>\n        <Menu.Item prefixIcon={<Trash mdxType=\"Trash\" />}>Option 2</Menu.Item>\n      </Menu>;\n\n        const onClose = () => {\n          setIsVisible(false);\n        };\n\n        return <Popover isVisible={isVisible} onClose={onClose} content={popoverContent} mdxType=\"Popover\">\n        <Button onClick={() => setIsVisible(!isVisible)} mdxType=\"Button\">Open basic modal</Button>\n      </Popover>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"popover-on-hover\"\n    }}>{`Popover on hover`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [isVisible, setIsVisible] = React.useState(false)\\n  const popoverContent = <span>A handy tooltip!</span>\\n  const closePopover = () => {\\n    setIsVisible(false)\\n  }\\n  const openPopover = () => {\\n    setIsVisible(true)\\n  }\\n  return (\\n    <Popover\\n      placement={\\'top\\'}\\n      isVisible={isVisible}\\n      onClose={closePopover}\\n      content={popoverContent}\\n    >\\n      <Trash onMouseEnter={openPopover} onMouseLeave={closePopover} />\\n    </Popover>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Popover,\n      Menu,\n      Button,\n      Trash,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isVisible, setIsVisible] = React.useState(false);\n        const popoverContent = <span>\n        A handy tooltip!\n      </span>;\n\n        const closePopover = () => {\n          setIsVisible(false);\n        };\n\n        const openPopover = () => {\n          setIsVisible(true);\n        };\n\n        return <Popover placement={'top'} isVisible={isVisible} onClose={closePopover} content={popoverContent} mdxType=\"Popover\">\n        <Trash onMouseEnter={openPopover} onMouseLeave={closePopover} mdxType=\"Trash\" />\n      </Popover>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <Props of={Popover} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}