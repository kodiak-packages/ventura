(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{iKsc:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return d})),n.d(t,"default",(function(){return u}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("mXGw"),o=n("/FXl"),c=n("TjRS"),b=n("ZFoC"),l=n("bzer");n("aD51");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/Checkbox/Checkbox.mdx"}});var i={_frontmatter:d},s=c.a;function u(e){var t,n,u,p,h,f,m=e.components,x=function(e,t){if(null==e)return{};var n,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(o.b)(s,r({},i,x,{components:m,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"checkbox"},"Checkbox"),Object(o.b)("p",null,"A checkbox can be used enable an optional setting or feature."),Object(o.b)("h2",{id:"best-practices"},"Best practices"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Checkboxes should be wrapped in a ",Object(o.b)("a",r({parentName:"li"},{href:"/ventura/form-field"}),"FormField")," or should be preceded by another component serving as a label")),Object(o.b)("h2",{id:"examples"},"Examples"),Object(o.b)("h3",{id:"basic-usage"},"Basic usage"),Object(o.b)(b.c,{__position:0,__code:'<Checkbox label="Enable me" name="enabled" />',__scope:(t={props:x,DefaultLayout:c.a,Playground:b.c,Props:b.d,Checkbox:l.f,Button:l.d},t.DefaultLayout=c.a,t._frontmatter=d,t),mdxType:"Playground"},Object(o.b)(l.f,{label:"Enable me",name:"enabled",mdxType:"Checkbox"})),Object(o.b)("h3",{id:"checked-state"},"Checked state"),Object(o.b)(b.c,{__position:1,__code:'<Checkbox label="Disable me" name="enabled-2" defaultValue={true} />',__scope:(n={props:x,DefaultLayout:c.a,Playground:b.c,Props:b.d,Checkbox:l.f,Button:l.d},n.DefaultLayout=c.a,n._frontmatter=d,n),mdxType:"Playground"},Object(o.b)(l.f,{label:"Disable me",name:"enabled-2",defaultValue:!0,mdxType:"Checkbox"})),Object(o.b)("h3",{id:"checkbox-with-description"},"Checkbox with description"),Object(o.b)(b.c,{__position:2,__code:'<Checkbox\n  label="Enable me"\n  name="enabled-3"\n  description="This feature can be enabled"\n/>',__scope:(u={props:x,DefaultLayout:c.a,Playground:b.c,Props:b.d,Checkbox:l.f,Button:l.d},u.DefaultLayout=c.a,u._frontmatter=d,u),mdxType:"Playground"},Object(o.b)(l.f,{label:"Enable me",name:"enabled-3",description:"This feature can be enabled",mdxType:"Checkbox"})),Object(o.b)("h3",{id:"disabled-checkbox"},"Disabled checkbox"),Object(o.b)(b.c,{__position:3,__code:'<Checkbox label="You can\'t enable me" name="enabled-4" isDisabled />',__scope:(p={props:x,DefaultLayout:c.a,Playground:b.c,Props:b.d,Checkbox:l.f,Button:l.d},p.DefaultLayout=c.a,p._frontmatter=d,p),mdxType:"Playground"},Object(o.b)(l.f,{label:"You can't enable me",name:"enabled-4",isDisabled:!0,mdxType:"Checkbox"})),Object(o.b)("h3",{id:"listening-for-changes"},"Listening for changes"),Object(o.b)(b.c,{__position:4,__code:'<Checkbox\n  label="Log"\n  name="enabled-5"\n  onChange={event => console.log(`LOGGER: ${event.target.checked}`)}\n/>',__scope:(h={props:x,DefaultLayout:c.a,Playground:b.c,Props:b.d,Checkbox:l.f,Button:l.d},h.DefaultLayout=c.a,h._frontmatter=d,h),mdxType:"Playground"},Object(o.b)(l.f,{label:"Log",name:"enabled-5",onChange:function(e){return console.log("LOGGER: "+e.target.checked)},mdxType:"Checkbox"})),Object(o.b)("h3",{id:"updating-initial-state"},"Updating initial state"),Object(o.b)(b.c,{__position:5,__code:"() => {\n  const [isChecked, setIsChecked] = React.useState(false)\n  const handleToggleClick = () => {\n    setIsChecked(!isChecked)\n  }\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', gap: '20px' }}>\n      <Button onClick={handleToggleClick}>Toggle checkbox</Button>\n      <Checkbox\n        label=\"Checkbox\"\n        name=\"enabled-6\"\n        value={isChecked}\n        onChange={() => setIsChecked(!isChecked)}\n      />\n    </div>\n  )\n}",__scope:(f={props:x,DefaultLayout:c.a,Playground:b.c,Props:b.d,Checkbox:l.f,Button:l.d},f.DefaultLayout=c.a,f._frontmatter=d,f),mdxType:"Playground"},(function(){var e=a.useState(!1),t=e[0],n=e[1];return Object(o.b)("div",{style:{display:"flex",alignItems:"center",gap:"20px"}},Object(o.b)(l.d,{onClick:function(){n(!t)},mdxType:"Button"},"Toggle checkbox"),Object(o.b)(l.f,{label:"Checkbox",name:"enabled-6",value:t,onChange:function(){return n(!t)},mdxType:"Checkbox"}))})),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)(b.d,{of:l.f,mdxType:"Props"}))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/Checkbox/Checkbox.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-checkbox-checkbox-mdx-3bcc84394df3be7fb7ce.js.map